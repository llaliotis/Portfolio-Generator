{"ast":null,"code":"var _jsxFileName = \"/Users/lefos/portfolio-generator/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [riskTolerance, setRiskTolerance] = useState('medium');\n  const [portfolio, setPortfolio] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await fetch('/generate_portfolio', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount,\n          risk_tolerance: riskTolerance\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Unknown error');\n      }\n      const data = await response.json();\n      setPortfolio(data.portfolio);\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      setError(error.message);\n    }\n  };\n\n  // Parse portfolio data to create chart data\n  const parsePortfolioData = () => {\n    if (!portfolio) return null;\n    try {\n      const portfolioItems = portfolio.split(', ');\n      const labels = [];\n      const data = [];\n      portfolioItems.forEach(item => {\n        const [ticker, percentage] = item.split(': ');\n        labels.push(ticker);\n        data.push(parseFloat(percentage.replace('%', '')));\n      });\n      return {\n        labels,\n        datasets: [{\n          data,\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#66FF66']\n        }]\n      };\n    } catch (error) {\n      console.error('Error parsing portfolio data:', error);\n      setError('Error parsing portfolio data');\n      return null;\n    }\n  };\n  const chartData = parsePortfolioData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Investment Amount\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: riskTolerance,\n        onChange: e => setRiskTolerance(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low (Conservative)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium (Balanced)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High (Aggressive)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), portfolio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Portfolio Allocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oG2Pe1cwvMfZFUSTcpirB1ltZbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Pie","jsxDEV","_jsxDEV","App","_s","amount","setAmount","riskTolerance","setRiskTolerance","portfolio","setPortfolio","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","risk_tolerance","ok","errorData","json","Error","data","console","message","parsePortfolioData","portfolioItems","split","labels","forEach","item","ticker","percentage","push","parseFloat","replace","datasets","backgroundColor","chartData","children","onSubmit","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/lefos/portfolio-generator/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction App() {\n  const [amount, setAmount] = useState('');\n  const [riskTolerance, setRiskTolerance] = useState('medium');\n  const [portfolio, setPortfolio] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await fetch('/generate_portfolio', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ amount, risk_tolerance: riskTolerance })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Unknown error');\n      }\n\n      const data = await response.json();\n      setPortfolio(data.portfolio);\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      setError(error.message);\n    }\n  };\n\n  // Parse portfolio data to create chart data\n  const parsePortfolioData = () => {\n    if (!portfolio) return null;\n\n    try {\n      const portfolioItems = portfolio.split(', ');\n      const labels = [];\n      const data = [];\n\n      portfolioItems.forEach(item => {\n        const [ticker, percentage] = item.split(': ');\n        labels.push(ticker);\n        data.push(parseFloat(percentage.replace('%', '')));\n      });\n\n      return {\n        labels,\n        datasets: [\n          {\n            data,\n            backgroundColor: [\n              '#FF6384',\n              '#36A2EB',\n              '#FFCE56',\n              '#4BC0C0',\n              '#9966FF',\n              '#FF9F40',\n              '#66FF66'\n            ]\n          }\n        ]\n      };\n    } catch (error) {\n      console.error('Error parsing portfolio data:', error);\n      setError('Error parsing portfolio data');\n      return null;\n    }\n  };\n\n  const chartData = parsePortfolioData();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          placeholder=\"Investment Amount\"\n          required\n        />\n        <select\n          value={riskTolerance}\n          onChange={(e) => setRiskTolerance(e.target.value)}\n          required\n        >\n          <option value=\"low\">Low (Conservative)</option>\n          <option value=\"medium\">Medium (Balanced)</option>\n          <option value=\"high\">High (Aggressive)</option>\n        </select>\n        <button type=\"submit\">Generate Portfolio</button>\n      </form>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      {portfolio && <div>\n        <h2>Portfolio Allocation</h2>\n        <Pie data={chartData} />\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}