{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.destroyCookie = exports.setCookie = exports.parseCookies = void 0;\nvar cookie = require(\"cookie\");\nvar setCookieParser = require(\"set-cookie-parser\");\nvar utils_1 = require(\"./utils\");\n/**\n * Parses cookies.\n *\n * @param ctx NextJS page or API context, express context, null or undefined.\n * @param options Options that we pass down to `cookie` library.\n */\nfunction parseCookies(ctx, options) {\n  var _a, _b;\n  if ((_b = (_a = ctx === null || ctx === void 0 ? void 0 : ctx.req) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b.cookie) {\n    return cookie.parse(ctx.req.headers.cookie, options);\n  }\n  if (utils_1.isBrowser()) {\n    return cookie.parse(document.cookie, options);\n  }\n  return {};\n}\nexports.parseCookies = parseCookies;\n/**\n * Sets a cookie.\n *\n * @param ctx NextJS page or API context, express context, null or undefined.\n * @param name The name of your cookie.\n * @param value The value of your cookie.\n * @param options Options that we pass down to `cookie` library.\n */\nfunction setCookie(ctx, name, value, options) {\n  var _a, _b;\n  if (options === void 0) {\n    options = {};\n  }\n  // SSR\n  if (((_a = ctx === null || ctx === void 0 ? void 0 : ctx.res) === null || _a === void 0 ? void 0 : _a.getHeader) && ctx.res.setHeader) {\n    // Check if response has finished and warn about it.\n    if ((_b = ctx === null || ctx === void 0 ? void 0 : ctx.res) === null || _b === void 0 ? void 0 : _b.finished) {\n      console.warn(\"Not setting \\\"\" + name + \"\\\" cookie. Response has finished.\");\n      console.warn(\"You should set cookie before res.send()\");\n      return {};\n    }\n    /**\n     * Load existing cookies from the header and parse them.\n     */\n    var cookies = ctx.res.getHeader('Set-Cookie') || [];\n    if (typeof cookies === 'string') cookies = [cookies];\n    if (typeof cookies === 'number') cookies = [];\n    /**\n     * Parse cookies but ignore values - we've already encoded\n     * them in the previous call.\n     */\n    var parsedCookies = setCookieParser.parse(cookies, {\n      decodeValues: false\n    });\n    /**\n     * We create the new cookie and make sure that none of\n     * the existing cookies match it.\n     */\n    var newCookie_1 = utils_1.createCookie(name, value, options);\n    var cookiesToSet_1 = [];\n    parsedCookies.forEach(function (parsedCookie) {\n      if (!utils_1.areCookiesEqual(parsedCookie, newCookie_1)) {\n        /**\n         * We serialize the cookie back to the original format\n         * if it isn't the same as the new one.\n         */\n        var serializedCookie = cookie.serialize(parsedCookie.name, parsedCookie.value, __assign({\n          // we prevent reencoding by default, but you might override it\n          encode: function (val) {\n            return val;\n          }\n        }, parsedCookie));\n        cookiesToSet_1.push(serializedCookie);\n      }\n    });\n    cookiesToSet_1.push(cookie.serialize(name, value, options));\n    // Update the header.\n    ctx.res.setHeader('Set-Cookie', cookiesToSet_1);\n  }\n  // Browser\n  if (utils_1.isBrowser()) {\n    if (options && options.httpOnly) {\n      throw new Error('Can not set a httpOnly cookie in the browser.');\n    }\n    document.cookie = cookie.serialize(name, value, options);\n  }\n  return {};\n}\nexports.setCookie = setCookie;\n/**\n * Destroys a cookie with a particular name.\n *\n * @param ctx NextJS page or API context, express context, null or undefined.\n * @param name Cookie name.\n * @param options Options that we pass down to `cookie` library.\n */\nfunction destroyCookie(ctx, name, options) {\n  /**\n   * We forward the request destroy to setCookie function\n   * as it is the same function with modified maxAge value.\n   */\n  return setCookie(ctx, name, '', __assign(__assign({}, options || {}), {\n    maxAge: -1\n  }));\n}\nexports.destroyCookie = destroyCookie;\n/* Utility Exports */\nexports.default = {\n  set: setCookie,\n  get: parseCookies,\n  destroy: destroyCookie\n};","map":{"version":3,"names":["cookie","require","setCookieParser","utils_1","parseCookies","ctx","options","_b","_a","req","headers","parse","isBrowser","document","exports","setCookie","name","value","res","getHeader","setHeader","finished","console","warn","cookies","parsedCookies","decodeValues","newCookie_1","createCookie","cookiesToSet_1","forEach","parsedCookie","areCookiesEqual","serializedCookie","serialize","__assign","encode","val","push","httpOnly","Error","destroyCookie","maxAge","default","set","get","destroy"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}